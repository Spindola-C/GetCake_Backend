CREATE DATABASE GetCake;

USE GetCake;

CREATE TABLE EMPRESA(
	ID_EMPRESA INT PRIMARY KEY IDENTITY(1,1),
	NM_EMPRESA VARCHAR(30) NOT NULL,
	CPF_CNPJ VARCHAR (20) NOT NULL UNIQUE
);

CREATE TABLE FORNECEDOR(
	ID_FORNECEDOR INT PRIMARY KEY IDENTITY(1,1),
	NM_FORNECEDOR VARCHAR (30) NOT NULL,
	NM_PRODUTO VARCHAR (100) NOT NULL,
    CPF_CNPJ VARCHAR(20) NOT NULL UNIQUE,
	COD_PROD_FORN INT NOT NULL
);

CREATE TABLE FON_EMP(
	ID_FORN_EMPR INT PRIMARY KEY IDENTITY(1,1),
	PRODUTO_VENDIDO VARCHAR(100) NOT NULL,
	VALOR_PRODUTO DECIMAL(18,2),
	ID_FORNECEDOR INT,
	ID_EMPRESA INT
);

ALTER TABLE FON_EMP ADD CONSTRAINT FK_FON_EMPR
FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDOR (ID_FORNECEDOR);
ALTER TABLE FON_EMP ADD CONSTRAINT FK_EMPR_FON
FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID_EMPRESA);

CREATE TABLE ESTOQUE(
	ID_ESTOQUE INT PRIMARY KEY IDENTITY(1,1),
	NM_PRODUTO VARCHAR(100) NOT NULL,
    COD_PROD_ESTOQUE INT,
	QTD_MAX INT NOT NULL,
    QTD_MIN INT NOT NULL,
    QTD_ESTOQUE INT NOT NULL,
    DT_ENTRADA DATETIME,
	DT_SAIDA DATETIME,
	ID_EMPRESA INT
);

ALTER TABLE ESTOQUE ADD CONSTRAINT FK_EST_EMPRESA
FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID_EMPRESA);

CREATE TABLE CAIXA(
	ID_CAIXA INT PRIMARY KEY IDENTITY(1,1),
	STATUS_PGTO VARCHAR(10) NOT NULL,
	CHECK(STATUS_PGTO IN ('FINALIZADO','PENDENTE','CANCELADO')),
	FORMA_PAGTO VARCHAR(10) NOT NULL,
	CHECK(FORMA_PAGTO IN ('DINHEIRO','CARTAO','BITCOIN')),
	VALOR_PGTO DECIMAL(9, 2) NOT NULL,
	ID_EMPRESA INT,
	ID_ESTOQUE INT
);

ALTER TABLE CAIXA ADD CONSTRAINT FK_CX_EMPRESA
FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID_EMPRESA);
ALTER TABLE CAIXA ADD CONSTRAINT FK_CX_ESTOQ
FOREIGN KEY (ID_ESTOQUE) REFERENCES ESTOQUE (ID_ESTOQUE);

CREATE TABLE CLIENTE(
	ID_CLIENTE INT PRIMARY KEY IDENTITY(1,1),
	NM_CLIENTE VARCHAR(60) NOT NULL,
	TIPO_CLIENTE CHAR(1) NOT NULL,
    CHECK (TIPO_CLIENTE IN ('F','J')),
    CPF_CNPJ VARCHAR(20) NOT NULL UNIQUE,
	ID_CAIXA INT,
	ID_EMPRESA INT
);

ALTER TABLE CLIENTE ADD CONSTRAINT FK_CX_CLIENTE
FOREIGN KEY (ID_CAIXA) REFERENCES CAIXA (ID_CAIXA);
ALTER TABLE CLIENTE ADD CONSTRAINT FK_EMPR_CLIENTE
FOREIGN KEY (ID_EMPRESA) REFERENCES EMPRESA (ID_EMPRESA);

CREATE TABLE PEDIDO(
	ID_PEDIDO INT PRIMARY KEY IDENTITY(1,1),
	DESC_PEDIDO VARCHAR(200) NOT NULL,
	VALOR_PEDIDO DECIMAL(18,2) NOT NULL,
	DT_ENTREGA DATETIME NOT NULL,
	STATUS_PEDIDO VARCHAR(15) NOT NULL,
	CHECK (STATUS_PEDIDO IN ('EM ABERTO','EM ANDAMENTO','CONCLUIDO','CANCELADO')),
	DT_PEDIDO DATETIME NOT NULL,
    MODO_RETIRADA_PEDIDO VARCHAR (10) NOT NULL, 
	CHECK (MODO_RETIRADA_PEDIDO IN ('LOJA','ENTREGA')), 
    TIPO_PEDIDO VARCHAR(10) NOT NULL,
	CHECK(TIPO_PEDIDO IN ('DOMICILIO','APLICATIVO')),
    QTD_PEDIDO INT,
    TAMANHO_PEDIDO CHAR(1) NOT NULL,
	CHECK(TAMANHO_PEDIDO IN ('P','M','G')),
	ID_CLIENTE INT,
	ID_CAIXA INT
);

ALTER TABLE PEDIDO ADD CONSTRAINT FK_PEDIDO_CLIENTE
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE);
ALTER TABLE PEDIDO ADD CONSTRAINT FK_PEDIDO_CAIXA
FOREIGN KEY (ID_CAIXA) REFERENCES CAIXA (ID_CAIXA);

CREATE TABLE FUNCIONARIO(
	ID_FUNCIONARIO INT PRIMARY KEY IDENTITY(1,1),
	NM_FUNCIONARIO VARCHAR (50) NOT NULL,
	CARGO_FUNCIONARIO VARCHAR(20) NOT NULL,
	CHECK (CARGO_FUNCIONARIO IN ('ADMINISTRACAO','COZINHA','ATENDIMENTO')),
	SAL_FUNCIONARIO DECIMAL(18,2) NOT NULL,
	DT_ADMISSAO DATETIME NOT NULL,
    DT_DEMISSAO DATETIME,
    STATUS_FUNCIONARIO CHAR(1) NOT NULL,
	CHECK (STATUS_FUNCIONARIO IN ('A','I')),
	ID_ESTOQUE INT
);

ALTER TABLE FUNCIONARIO ADD CONSTRAINT FK_FUNC_ESTOQ
FOREIGN KEY (ID_ESTOQUE) REFERENCES ESTOQUE (ID_ESTOQUE);

CREATE TABLE ORDEM_PEDIDO(
	ID_ORDEM_PEDIDO INT PRIMARY KEY IDENTITY,
	ID_CAIXA INT,
	ID_FUNCIONARIO INT,
	ID_PEDIDO INT
);

ALTER TABLE ORDEM_PEDIDO ADD CONSTRAINT FK_OP_CAIXA
FOREIGN KEY (ID_CAIXA) REFERENCES CAIXA(ID_CAIXA);
ALTER TABLE ORDEM_PEDIDO ADD CONSTRAINT FK_OP_FUNC
FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIO(ID_FUNCIONARIO);
ALTER TABLE ORDEM_PEDIDO ADD CONSTRAINT FK_OP_PEDIDO
FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO(ID_PEDIDO);

CREATE TABLE ENDERECO (
	ID_ENDERECO INT PRIMARY KEY IDENTITY(1,1),
	CIDADE VARCHAR(25) NOT NULL,
    ESTADO CHAR(2) NOT NULL,
    RUA VARCHAR(25),
	QUADRA INT,
    LOTE INT,
    NUMERO INT,
    ID_END_FORNECEDOR INT,
    ID_END_CLIENTE INT,
    ID_END_EMPRESA INT
);

ALTER TABLE ENDERECO ADD CONSTRAINT FK_END_FORN
FOREIGN KEY(ID_END_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR);
ALTER TABLE ENDERECO ADD CONSTRAINT FK_END_CLNT
FOREIGN KEY(ID_END_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);
ALTER TABLE ENDERECO ADD CONSTRAINT FK_END_EMP
FOREIGN KEY(ID_END_EMPRESA) REFERENCES EMPRESA(ID_EMPRESA);

CREATE TABLE TELEFONE (
	ID_TELEFONE INT PRIMARY KEY IDENTITY(1,1),
	TIPO_TEL CHAR(3) NOT NULL,
	CHECK(TIPO_TEL IN('RES','CEL','EMP')),
    NUM1 VARCHAR(15) NOT NULL,
    NUM2 VARCHAR(15),
    NUM3 VARCHAR(15),
    ID_TEL_FORNECEDOR INT, 
    ID_TEL_CLIENTE INT,
    ID_TEL_EMPRESA INT
);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_TEL_FORN
FOREIGN KEY(ID_TEL_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR);
ALTER TABLE TELEFONE ADD CONSTRAINT FK_TEL_CLNT
FOREIGN KEY(ID_TEL_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);
ALTER TABLE TELEFONE ADD CONSTRAINT FK_TEL_EMP
FOREIGN KEY(ID_TEL_EMPRESA) REFERENCES EMPRESA(ID_EMPRESA);

CREATE TABLE HISTORICO (
	ID_HIST INT PRIMARY KEY IDENTITY(1,1),
/* PEDIDO */
	QTD_TOTAL_PEDIDO INT,
	DT_PEDIDO DATETIME,
	DT_ENTREGA_PEDIDO DATETIME,
	QTD_PEDIDO_CANCELAMENTO INT,
    ID_PEDIDO INT, 
/* CADASTRO_STATUS */
	QTD_CADASTRO_NOVO INT,
	QTD_CADASTRO_ALTERADO INT,
	QTD_CADASTRO_EXCLUIDO INT,
    ID_CLIENTE INT,
    ID_FORNECEDOR INT, 
    ID_FUNCIONARIO INT, 
/* ESTOQUE_CONTROLE */
	DT_ENTRADA_ESTOQUE DATETIME,
	COD_PRODUTO INT,
	DT_SAIDA_ESTOQUE DATETIME,
    ID_ESTOQUE INT
);

ALTER TABLE HISTORICO ADD CONSTRAINT FK_HIST_CLNT
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);
ALTER TABLE HISTORICO ADD CONSTRAINT FK_HIST_FORN
FOREIGN KEY(ID_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR);
ALTER TABLE HISTORICO ADD CONSTRAINT FK_HIST_FUNC
FOREIGN KEY(ID_FUNCIONARIO) REFERENCES FUNCIONARIO(ID_FUNCIONARIO);
ALTER TABLE HISTORICO ADD CONSTRAINT FK_HIST_PEDIDO
FOREIGN KEY(ID_PEDIDO) REFERENCES PEDIDO (ID_PEDIDO);
ALTER TABLE HISTORICO ADD CONSTRAINT FK_HIST_ESTOQUE
FOREIGN KEY(ID_ESTOQUE) REFERENCES ESTOQUE (ID_ESTOQUE);